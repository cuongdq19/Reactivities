{"version":3,"sources":["app/models/pagination.ts","app/api/agent.ts","app/models/activity.ts","app/models/profile.ts","app/stores/activityStore.ts","app/stores/profileStore.ts","app/stores/userStore.ts","app/stores/store.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","app/stores/commentStore.ts","app/layout/NavBar.tsx","features/profiles/FollowButton.tsx","features/profiles/ProfileCard.tsx","features/activities/dashboard/ActivityListItemAttendee.tsx","features/activities/dashboard/ActivityListItem.tsx","features/activities/dashboard/ActivityList.tsx","features/activities/dashboard/ActivityFilters.tsx","features/activities/dashboard/ActivityListItemPlaceholder.tsx","features/activities/dashboard/ActivityDashboard.tsx","app/common/form/MyTextInput.tsx","features/users/LoginForm.tsx","features/errors/ValidationErrors.tsx","features/users/RegisterForm.tsx","features/home/HomePage.tsx","app/common/options/categoryOptions.ts","app/layout/LoadingComponent.tsx","app/common/form/MyTextArea.tsx","app/common/form/MySelectInput.tsx","app/common/form/MyDateInput.tsx","features/activities/form/ActivityForm.tsx","features/activities/details/ActivityDetailedChat.tsx","features/activities/details/ActivityDetailedInfo.tsx","features/activities/details/ActivityDetailedHeader.tsx","features/activities/details/ActivityDetailedSidebar.tsx","features/activities/details/ActivityDetails.tsx","features/errors/TestError.tsx","features/errors/NotFound.tsx","features/errors/ServerError.tsx","app/common/modals/ModalContainer.tsx","features/profiles/ProfileEditForm.tsx","features/profiles/ProfileAbout.tsx","features/profiles/ProfileActivities.tsx","features/profiles/ProfileFollowings.tsx","app/common/imageUpload/PhotoWidgetCropper.tsx","app/common/imageUpload/PhotoWidgetDropzone.tsx","app/common/imageUpload/PhotoUploadWidget.tsx","features/profiles/ProfilePhotos.tsx","features/profiles/ProfileContent.tsx","features/profiles/ProfileHeader.tsx","features/profiles/ProfilePage.tsx","app/layout/PrivateRoute.tsx","app/layout/App.tsx","reportWebVitals.ts","app/layout/ScrollToTop.tsx","index.tsx"],"names":["PaginatedResult","data","pagination","this","PagingParams","pageNumber","pageSize","axios","defaults","baseURL","process","interceptors","request","use","config","token","store","commonStore","headers","Authorization","response","a","JSON","parse","error","status","toast","method","errors","hasOwnProperty","history","push","modalStateErrors","key","flat","setServerError","Promise","reject","responseBody","requests","url","get","then","body","post","put","delete","agent","Activities","list","params","details","id","create","activity","update","attend","Account","current","login","user","register","Profiles","username","uploadPhoto","file","formData","FormData","append","setMainPhoto","deletePhoto","updateProfile","profile","updateFollowing","listFollowings","predicate","listActivities","Activity","init","Object","assign","ActivityFormValues","undefined","title","category","description","date","city","venue","Profile","displayName","image","ActivityStore","activityRegistry","Map","selectedActivity","editMode","loading","loadingInitial","pagingParams","set","setPagingParams","setPredicate","value","resetPredicate","forEach","loadActivities","setLoadingInitial","axiosParams","result","setActivity","setPagination","console","log","loadActivity","getActivity","runInAction","userStore","isGoing","attendees","some","isHost","hostUsername","host","find","x","Date","state","createActivity","attendee","newActivity","updateActivity","updatedActivity","deleteActivity","updateAttendance","filter","cancelActivityToggle","isCancelled","updateAttendeeFollowing","following","followersCount","clearSelectedActivity","makeAutoObservable","reaction","keys","clear","URLSearchParams","toString","toISOString","Array","from","values","sort","b","getTime","entries","activitiesByDate","reduce","activities","format","ProfileStore","loadingProfile","uploading","followings","loadingFollowings","activeTab","userActivities","loadingActivities","setActiveTab","loadProfile","photo","photos","isMain","setImage","p","setDisplayName","activityStore","followingCount","loadFollowings","loadUserActivities","UserStore","creds","setToken","modalStore","closeModal","logout","localStorage","removeItem","getUser","name","getItem","appLoaded","setAppLoaded","setItem","modal","open","openModal","content","profileStore","commentStore","comments","hubConnection","createHubConnection","activityId","HubConnectionBuilder","withUrl","accessTokenFactory","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","catch","on","comment","createdAt","unshift","stopHubConnection","stop","clearComments","addComment","invoke","StoreContext","createContext","useStore","useContext","observer","Menu","inverted","fixed","Container","Item","as","NavLink","to","exact","header","src","alt","style","marginRight","Button","positive","position","Image","avatar","spaced","Dropdown","pointing","text","Link","icon","onClick","Reveal","animated","Content","visible","width","fluid","color","hidden","basic","e","preventDefault","handleFollow","Card","Header","Description","str","length","substring","truncate","bio","extra","Icon","styles","borderColor","borderWidth","List","horizontal","map","Popup","hoverable","trigger","bordered","size","circular","ActivityListItem","Segment","Group","Label","attached","textAlign","marginBottom","secondary","clearing","floated","groupedActivities","group","sub","vertical","marginTop","active","has","onChange","ActivityListItemPlaceholder","Placeholder","minHeight","Line","Paragraph","disabled","useState","loadingNext","setLoadingNext","useEffect","Grid","Column","pageStart","loadMore","currentPage","hasMore","totalPages","initialLoad","Loader","MyTextInput","props","useField","field","meta","Form","Field","touched","label","initialValues","email","password","onSubmit","setErrors","handleSubmit","isSubmitting","className","autoComplete","placeholder","type","render","ValidationErrors","Message","err","i","validationSchema","Yup","required","isValid","dirty","isLoggedIn","categoryOptions","LoadingComponent","Dimmer","MyTextArea","MySelectInput","helpers","Select","clearable","options","evt","setValue","onBlur","setTouched","MyDateInput","selected","useHistory","useParams","nullable","enableReinitialize","uuid","handleFormSubmit","rows","placeholderText","showTimeSelect","timeCaption","dateFormat","border","resetForm","onKeyPress","shiftKey","Comment","Avatar","Author","Metadata","formatDistanceToNow","Text","whiteSpace","verticalAlign","activityImageStyle","activityImageTextStyle","bottom","left","height","padding","zIndex","top","ribbon","relaxed","divided","Extra","TestErrors","widths","baseUrl","primary","NotFound","Inline","message","Modal","onClose","setEditMode","isCurrentUser","Tab","Pane","panes","menuItem","pane","menu","onTabChange","activeIndex","handleTabChange","itemsPerRow","objectFit","Meta","PhotoWidgetCropper","imagePreview","setCropper","initialAspectRatio","aspectRatio","preview","guides","viewMode","autoCropArea","background","onInitialized","cropper","PhotoWidgetDropzone","setFiles","dzStyles","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","PhotoUploadWidget","files","revokeObjectURL","overflow","getCroppedCanvas","toBlob","blob","addPhotoMode","setAddPhotoMode","target","setTarget","currentTarget","handleSetMainPhoto","handleDeletePhoto","menuPosition","Statistic","Divider","PrivateRoute","Component","component","rest","location","useLocation","finally","hideProgressBar","path","HomePage","ActivityDashboard","ActivityDetails","ActivityForm","ProfilePage","ServerError","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollToTop","pathname","window","scrollTo","createBrowserHistory","ReactDOM","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.ab5a7cdd.chunk.js","sourcesContent":["export interface Pagination {\r\n  currentPage: number;\r\n  itemsPerPage: number;\r\n  totalItems: number;\r\n  totalPages: number;\r\n}\r\n\r\nexport class PaginatedResult<T> {\r\n  data: T;\r\n  pagination: Pagination;\r\n\r\n  constructor(data: T, pagination: Pagination) {\r\n    this.data = data;\r\n    this.pagination = pagination;\r\n  }\r\n}\r\n\r\nexport class PagingParams {\r\n  pageNumber;\r\n  pageSize;\r\n\r\n  constructor(pageNumber = 1, pageSize = 5) {\r\n    this.pageNumber = pageNumber;\r\n    this.pageSize = pageSize;\r\n  }\r\n}\r\n","import axios, { AxiosError, AxiosResponse } from 'axios';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport { history } from '../..';\r\nimport { Activity, ActivityFormValues } from '../models/activity';\r\nimport { PaginatedResult } from '../models/pagination';\r\nimport { Photo, Profile, UserActivity } from '../models/profile';\r\nimport { User, UserFormValues } from '../models/user';\r\nimport { store } from '../stores/store';\r\n\r\nconst sleep = (delay: number) => {\r\n  return new Promise(resolve => {\r\n    setTimeout(resolve, delay);\r\n  });\r\n};\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.request.use(config => {\r\n  const token = store.commonStore.token;\r\n  if (token) config.headers.Authorization = `Bearer ${token}`;\r\n  return config;\r\n});\r\n\r\naxios.interceptors.response.use(\r\n  async response => {\r\n    if (process.env.NODE_ENV === 'development') await sleep(1000);\r\n    const pagination = response.headers['pagination'];\r\n    if (pagination) {\r\n      response.data = new PaginatedResult(\r\n        response.data,\r\n        JSON.parse(pagination)\r\n      );\r\n      return response as AxiosResponse<PaginatedResult<any>>;\r\n    }\r\n    return response;\r\n  },\r\n  (error: AxiosError) => {\r\n    const { data, status, config } = error.response!;\r\n\r\n    switch (status) {\r\n      case 400:\r\n        if (typeof data === 'string') {\r\n          toast.error(data);\r\n        }\r\n        if (config.method === 'get' && data.errors.hasOwnProperty('id')) {\r\n          history.push('/not-found');\r\n        }\r\n        if (data.errors) {\r\n          const modalStateErrors = [];\r\n          for (const key in data.errors) {\r\n            if (data.errors[key]) {\r\n              modalStateErrors.push(data.errors[key]);\r\n            }\r\n          }\r\n          throw modalStateErrors.flat();\r\n        }\r\n\r\n        break;\r\n      case 401:\r\n        toast.error('Unauthorised');\r\n        break;\r\n      case 404:\r\n        history.push('/not-found');\r\n        break;\r\n      case 500:\r\n        store.commonStore.setServerError(data);\r\n        history.push('/server-error');\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\r\n\r\nconst requests = {\r\n  get: <T>(url: string) => axios.get<T>(url).then(responseBody),\r\n  post: <T>(url: string, body: {}) =>\r\n    axios.post<T>(url, body).then(responseBody),\r\n  put: <T>(url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\r\n  del: <T>(url: string) => axios.delete<T>(url).then(responseBody),\r\n};\r\n\r\nconst Activities = {\r\n  list: (params: URLSearchParams) =>\r\n    axios\r\n      .get<PaginatedResult<Activity[]>>('/activities', { params })\r\n      .then(responseBody),\r\n  details: (id: string) => requests.get<Activity>(`/activities/${id}`),\r\n  create: (activity: ActivityFormValues) =>\r\n    requests.post<void>('/activities', activity),\r\n  update: (activity: ActivityFormValues) =>\r\n    requests.put<void>(`/activities/${activity.id}`, activity),\r\n  delete: (id: string) => requests.del<void>(`/activities/${id}`),\r\n  attend: (id: string) => requests.post<void>(`/activities/${id}/attend`, {}),\r\n};\r\n\r\nconst Account = {\r\n  current: () => requests.get<User>('account'),\r\n  login: (user: UserFormValues) => requests.post<User>('/account/login', user),\r\n  register: (user: UserFormValues) =>\r\n    requests.post<User>('/account/register', user),\r\n};\r\n\r\nconst Profiles = {\r\n  get: (username: string) => requests.get<Profile>(`/profiles/${username}`),\r\n  uploadPhoto: (file: Blob) => {\r\n    let formData = new FormData();\r\n    formData.append('File', file);\r\n    return axios.post<Photo>('photos', formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n  },\r\n  setMainPhoto: (id: string) => requests.post(`/photos/${id}/setMain`, {}),\r\n  deletePhoto: (id: string) => requests.del(`/photos/${id}`),\r\n  updateProfile: (profile: Partial<Profile>) =>\r\n    requests.put(`/profiles`, profile),\r\n  updateFollowing: (username: string) =>\r\n    requests.post(`/follow/${username}`, {}),\r\n  listFollowings: (username: string, predicate: string) =>\r\n    requests.get<Profile[]>(`/follow/${username}?predicate=${predicate}`),\r\n  listActivities: (username: string, predicate: string) =>\r\n    requests.get<UserActivity[]>(\r\n      `/profiles/${username}/activities?predicate=${predicate}`\r\n    ),\r\n};\r\n\r\nconst agent = {\r\n  Activities,\r\n  Account,\r\n  Profiles,\r\n};\r\n\r\nexport default agent;\r\n","import { Profile } from './profile';\r\n\r\nexport interface Activity {\r\n  id: string;\r\n  title: string;\r\n  date: Date | null;\r\n  description: string;\r\n  category: string;\r\n  city: string;\r\n  venue: string;\r\n  hostUsername: string;\r\n  isCancelled: boolean;\r\n  isGoing: boolean;\r\n  isHost: boolean;\r\n  host?: Profile;\r\n  attendees: Profile[];\r\n}\r\n\r\nexport class Activity implements Activity {\r\n  constructor(init?: ActivityFormValues) {\r\n    Object.assign(this, init);\r\n  }\r\n}\r\n\r\nexport class ActivityFormValues {\r\n  id?: string = undefined;\r\n  title: string = '';\r\n  category: string = '';\r\n  description: string = '';\r\n  date: Date | null = null;\r\n  city: string = '';\r\n  venue: string = '';\r\n\r\n  constructor(activity?: ActivityFormValues) {\r\n    if (activity) {\r\n      this.id = activity.id;\r\n      this.title = activity.title;\r\n      this.category = activity.category;\r\n      this.description = activity.description;\r\n      this.date = activity.date;\r\n      this.city = activity.city;\r\n      this.venue = activity.venue;\r\n    }\r\n  }\r\n}\r\n","import { User } from './user';\r\n\r\nexport interface Profile {\r\n  username: string;\r\n  displayName: string;\r\n  image?: string;\r\n  bio?: string;\r\n  followersCount: number;\r\n  followingCount: number;\r\n  following: boolean;\r\n  photos: Photo[];\r\n}\r\n\r\nexport class Profile implements Profile {\r\n  constructor(user: User) {\r\n    this.username = user.username;\r\n    this.displayName = user.displayName;\r\n    this.image = user.image;\r\n  }\r\n}\r\n\r\nexport interface Photo {\r\n  id: string;\r\n  url: string;\r\n  isMain: boolean;\r\n}\r\n\r\nexport interface UserActivity {\r\n  id: string;\r\n  title: string;\r\n  category: string;\r\n  date: Date;\r\n}\r\n","import { makeAutoObservable, reaction, runInAction } from 'mobx';\r\nimport { format } from 'date-fns';\r\n\r\nimport agent from '../api/agent';\r\nimport { Activity, ActivityFormValues } from '../models/activity';\r\nimport { store } from './store';\r\nimport { Profile } from '../models/profile';\r\nimport { Pagination, PagingParams } from '../models/pagination';\r\n\r\nexport default class ActivityStore {\r\n  activityRegistry = new Map<string, Activity>();\r\n  selectedActivity: Activity | undefined = undefined;\r\n  editMode = false;\r\n  loading = false;\r\n  loadingInitial = false;\r\n  pagination: Pagination | null = null;\r\n  pagingParams = new PagingParams();\r\n  predicate = new Map().set('all', true);\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n\r\n    reaction(\r\n      () => this.predicate.keys(),\r\n      () => {\r\n        this.pagingParams = new PagingParams();\r\n        this.activityRegistry.clear();\r\n        this.loadActivities();\r\n      }\r\n    );\r\n  }\r\n\r\n  setPagingParams = (pagingParams: PagingParams) => {\r\n    this.pagingParams = pagingParams;\r\n  };\r\n\r\n  setPredicate = (predicate: string, value: string | Date | Date[]) => {\r\n    const resetPredicate = () => {\r\n      this.predicate.forEach((value, key) => {\r\n        if (key !== 'startDate') this.predicate.delete(key);\r\n      });\r\n    };\r\n    switch (predicate) {\r\n      case 'all':\r\n        resetPredicate();\r\n        this.predicate.set('all', true);\r\n        break;\r\n      case 'isGoing':\r\n        resetPredicate();\r\n        this.predicate.set('isGoing', true);\r\n        break;\r\n      case 'isHost':\r\n        resetPredicate();\r\n        this.predicate.set('isHost', true);\r\n        break;\r\n      case 'startDate':\r\n        this.predicate.delete('startDate');\r\n        this.predicate.set('startDate', value);\r\n    }\r\n  };\r\n\r\n  get axiosParams() {\r\n    const params = new URLSearchParams();\r\n    params.append('pageNumber', this.pagingParams.pageNumber.toString());\r\n    params.append('pageSize', this.pagingParams.pageSize.toString());\r\n    this.predicate.forEach((value, key) => {\r\n      if (key === 'startDate') {\r\n        params.append(key, (value as Date).toISOString());\r\n      } else {\r\n        params.append(key, value);\r\n      }\r\n    });\r\n    return params;\r\n  }\r\n\r\n  get activitiesByDate() {\r\n    return Array.from(this.activityRegistry.values()).sort(\r\n      (a, b) => a.date!.getTime() - b.date!.getTime()\r\n    );\r\n  }\r\n\r\n  get groupedActivities() {\r\n    return Object.entries(\r\n      this.activitiesByDate.reduce((activities, activity) => {\r\n        const date = format(activity.date!, 'dd MMM yyyy');\r\n        activities[date] = activities[date]\r\n          ? [...activities[date], activity]\r\n          : [activity];\r\n        return activities;\r\n      }, {} as { [key: string]: Activity[] })\r\n    );\r\n  }\r\n\r\n  loadActivities = async () => {\r\n    this.setLoadingInitial(true);\r\n    try {\r\n      const result = await agent.Activities.list(this.axiosParams);\r\n      result.data.forEach(activity => {\r\n        this.setActivity(activity);\r\n      });\r\n      this.setPagination(result.pagination);\r\n      this.setLoadingInitial(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n      this.setLoadingInitial(false);\r\n    }\r\n  };\r\n\r\n  setPagination = (pagination: Pagination) => {\r\n    this.pagination = pagination;\r\n  };\r\n\r\n  loadActivity = async (id: string) => {\r\n    let activity = this.getActivity(id);\r\n    if (activity) {\r\n      this.selectedActivity = activity;\r\n      return activity;\r\n    } else {\r\n      this.setLoadingInitial(true);\r\n      try {\r\n        activity = await agent.Activities.details(id);\r\n        this.setActivity(activity);\r\n        runInAction(() => {\r\n          this.selectedActivity = activity;\r\n        });\r\n        this.setLoadingInitial(false);\r\n        return activity;\r\n      } catch (error) {\r\n        console.log(error);\r\n        this.setLoadingInitial(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  private setActivity = (activity: Activity) => {\r\n    const user = store.userStore.user;\r\n    if (user) {\r\n      activity.isGoing = activity.attendees!.some(\r\n        a => a.username === user.username\r\n      );\r\n      activity.isHost = activity.hostUsername === user.username;\r\n      activity.host = activity.attendees?.find(\r\n        x => x.username === activity.hostUsername\r\n      );\r\n    }\r\n    activity.date = new Date(activity.date!);\r\n    this.activityRegistry.set(activity.id, activity);\r\n  };\r\n\r\n  private getActivity = (id: string) => {\r\n    return this.activityRegistry.get(id);\r\n  };\r\n\r\n  setLoadingInitial = (state: boolean) => {\r\n    this.loadingInitial = state;\r\n  };\r\n\r\n  createActivity = async (activity: ActivityFormValues) => {\r\n    const user = store.userStore.user;\r\n    const attendee = new Profile(user!);\r\n    try {\r\n      await agent.Activities.create(activity);\r\n      const newActivity = new Activity(activity);\r\n      newActivity.hostUsername = user!.username;\r\n      newActivity.attendees = [attendee];\r\n      this.setActivity(newActivity);\r\n      runInAction(() => {\r\n        this.selectedActivity = newActivity;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  updateActivity = async (activity: ActivityFormValues) => {\r\n    try {\r\n      await agent.Activities.update(activity);\r\n      runInAction(() => {\r\n        if (activity.id) {\r\n          let updatedActivity = {\r\n            ...this.getActivity(activity.id),\r\n            ...activity,\r\n          };\r\n          this.activityRegistry.set(activity.id, updatedActivity as Activity);\r\n          this.selectedActivity = updatedActivity as Activity;\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  deleteActivity = async (id: string) => {\r\n    this.loading = true;\r\n\r\n    try {\r\n      await agent.Activities.delete(id);\r\n      runInAction(() => {\r\n        this.activityRegistry.delete(id);\r\n\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  updateAttendance = async () => {\r\n    const user = store.userStore.user;\r\n\r\n    this.loading = true;\r\n\r\n    try {\r\n      await agent.Activities.attend(this.selectedActivity!.id);\r\n      runInAction(() => {\r\n        if (this.selectedActivity?.isGoing) {\r\n          this.selectedActivity.attendees =\r\n            this.selectedActivity.attendees?.filter(\r\n              a => a.username !== user?.username\r\n            );\r\n          this.selectedActivity.isGoing = false;\r\n        } else {\r\n          const attendee = new Profile(user!);\r\n          this.selectedActivity?.attendees?.push(attendee);\r\n          this.selectedActivity!.isGoing = true;\r\n        }\r\n        this.activityRegistry.set(\r\n          this.selectedActivity!.id,\r\n          this.selectedActivity!\r\n        );\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  cancelActivityToggle = async () => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Activities.attend(this.selectedActivity!.id);\r\n      runInAction(() => {\r\n        this.selectedActivity!.isCancelled =\r\n          !this.selectedActivity?.isCancelled;\r\n        this.activityRegistry.set(\r\n          this.selectedActivity!.id,\r\n          this.selectedActivity!\r\n        );\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  updateAttendeeFollowing = (username: string) => {\r\n    this.activityRegistry.forEach(activity => {\r\n      activity.attendees.forEach(attendee => {\r\n        if (attendee.username === username) {\r\n          attendee.following\r\n            ? attendee.followersCount--\r\n            : attendee.followersCount++;\r\n          attendee.following = !attendee.following;\r\n        }\r\n      });\r\n    });\r\n  };\r\n\r\n  clearSelectedActivity = () => {\r\n    this.selectedActivity = undefined;\r\n  };\r\n}\r\n","import { makeAutoObservable, reaction, runInAction } from 'mobx';\r\n\r\nimport agent from '../api/agent';\r\nimport { Photo, Profile, UserActivity } from '../models/profile';\r\nimport { store } from './store';\r\n\r\nexport default class ProfileStore {\r\n  profile: Profile | null = null;\r\n  loadingProfile = false;\r\n  uploading = false;\r\n  loading = false;\r\n  followings: Profile[] = [];\r\n  loadingFollowings = false;\r\n  activeTab = 0;\r\n  userActivities: UserActivity[] = [];\r\n  loadingActivities = false;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n\r\n    reaction(\r\n      () => this.activeTab,\r\n      activeTab => {\r\n        if (activeTab === 3 || activeTab === 4) {\r\n          const predicate = activeTab === 3 ? 'followers' : 'following';\r\n          this.loadFollowings(predicate);\r\n        } else {\r\n          this.followings = [];\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  setActiveTab = (activeTab: any) => {\r\n    this.activeTab = activeTab;\r\n  };\r\n\r\n  get isCurrentUser() {\r\n    if (store.userStore.user && this.profile) {\r\n      return store.userStore.user.username === this.profile.username;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  loadProfile = async (username: string) => {\r\n    this.loadingProfile = true;\r\n    try {\r\n      const profile = await agent.Profiles.get(username);\r\n      runInAction(() => {\r\n        this.profile = profile;\r\n        this.loadingProfile = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.loadingProfile = false));\r\n    }\r\n  };\r\n\r\n  uploadPhoto = async (file: Blob) => {\r\n    this.uploading = true;\r\n    try {\r\n      const response = await agent.Profiles.uploadPhoto(file);\r\n      const photo = response.data;\r\n      runInAction(() => {\r\n        if (this.profile) {\r\n          this.profile.photos.push(photo);\r\n          if (photo.isMain && store.userStore.user) {\r\n            store.userStore.setImage(photo.url);\r\n            this.profile.image = photo.url;\r\n          }\r\n        }\r\n        this.uploading = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.uploading = false));\r\n    }\r\n  };\r\n\r\n  setMainPhoto = async (photo: Photo) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.setMainPhoto(photo.id);\r\n      store.userStore.setImage(photo.url);\r\n      runInAction(() => {\r\n        if (this.profile && this.profile.photos) {\r\n          this.profile.photos.find(p => p.isMain)!.isMain = false;\r\n          this.profile.photos.find(p => p.id === photo.id)!.isMain = true;\r\n          this.profile.image = photo.url;\r\n          this.loading = false;\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.loading = false));\r\n    }\r\n  };\r\n\r\n  deletePhoto = async (photo: Photo) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.deletePhoto(photo.id);\r\n      runInAction(() => {\r\n        if (this.profile) {\r\n          this.profile.photos = this.profile.photos.filter(\r\n            p => p.id !== photo.id\r\n          );\r\n          this.loading = false;\r\n        }\r\n      });\r\n    } catch (error) {\r\n      runInAction(() => (this.loading = false));\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  updateProfile = async (profile: Partial<Profile>) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.updateProfile(profile);\r\n      runInAction(() => {\r\n        if (\r\n          profile.displayName &&\r\n          profile.displayName !== store.userStore.user?.displayName\r\n        ) {\r\n          store.userStore.setDisplayName(profile.displayName);\r\n        }\r\n\r\n        this.profile = { ...this.profile, ...(profile as Profile) };\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.loading = false));\r\n    }\r\n  };\r\n\r\n  updateFollowing = async (username: string, following: boolean) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.updateFollowing(username);\r\n      store.activityStore.updateAttendeeFollowing(username);\r\n      runInAction(() => {\r\n        if (\r\n          this.profile &&\r\n          this.profile.username !== store.userStore.user?.username &&\r\n          this.profile.username === username\r\n        ) {\r\n          following\r\n            ? this.profile.followersCount++\r\n            : this.profile.followersCount--;\r\n          this.profile.following = !this.profile.following;\r\n        }\r\n        if (\r\n          this.profile &&\r\n          this.profile.username === store.userStore.user?.username\r\n        ) {\r\n          following\r\n            ? this.profile.followingCount++\r\n            : this.profile.followingCount--;\r\n        }\r\n        this.followings.forEach(profile => {\r\n          if (profile.username === username) {\r\n            profile.following\r\n              ? profile.followersCount--\r\n              : profile.followersCount++;\r\n            profile.following = !profile.following;\r\n          }\r\n        });\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.loading = false));\r\n    }\r\n  };\r\n\r\n  loadFollowings = async (predicate: string) => {\r\n    this.loadingFollowings = true;\r\n    try {\r\n      const followings = await agent.Profiles.listFollowings(\r\n        this.profile!.username,\r\n        predicate\r\n      );\r\n      runInAction(() => {\r\n        this.followings = followings;\r\n        this.loadingFollowings = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => {\r\n        this.loadingFollowings = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  loadUserActivities = async (username: string, predicate?: string) => {\r\n    this.loadingActivities = true;\r\n    try {\r\n      const activities = await agent.Profiles.listActivities(\r\n        username,\r\n        predicate!\r\n      );\r\n      runInAction(() => {\r\n        this.userActivities = activities;\r\n        this.loadingActivities = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => {\r\n        this.loadingActivities = false;\r\n      });\r\n    }\r\n  };\r\n}\r\n","import { makeAutoObservable, runInAction } from 'mobx';\r\nimport { history } from '../..';\r\nimport agent from '../api/agent';\r\nimport { User, UserFormValues } from '../models/user';\r\nimport { store } from './store';\r\n\r\nexport default class UserStore {\r\n  user: User | null = null;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  get isLoggedIn() {\r\n    return !!this.user;\r\n  }\r\n\r\n  login = async (creds: UserFormValues) => {\r\n    try {\r\n      const user = await agent.Account.login(creds);\r\n      store.commonStore.setToken(user.token);\r\n      runInAction(() => (this.user = user));\r\n      history.push('/activities');\r\n      store.modalStore.closeModal();\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  logout = () => {\r\n    store.commonStore.setToken(null);\r\n    localStorage.removeItem('jwt');\r\n    this.user = null;\r\n    history.push('/');\r\n  };\r\n\r\n  getUser = async () => {\r\n    try {\r\n      const user = await agent.Account.current();\r\n      runInAction(() => (this.user = user));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  register = async (creds: UserFormValues) => {\r\n    try {\r\n      const user = await agent.Account.register(creds);\r\n      store.commonStore.setToken(user.token);\r\n      runInAction(() => (this.user = user));\r\n      history.push('/activities');\r\n      store.modalStore.closeModal();\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  setImage = (image: string) => {\r\n    if (this.user) this.user.image = image;\r\n  };\r\n\r\n  setDisplayName = (name: string) => {\r\n    if (this.user) this.user.displayName = name;\r\n  };\r\n}\r\n","import { createContext, useContext } from 'react';\r\n\r\nimport ActivityStore from './activityStore';\r\nimport CommentStore from './commentStore';\r\nimport CommonStore from './commonStore';\r\nimport ModalStore from './modalStore';\r\nimport ProfileStore from './profileStore';\r\nimport UserStore from './userStore';\r\n\r\ninterface Store {\r\n  activityStore: ActivityStore;\r\n  commonStore: CommonStore;\r\n  userStore: UserStore;\r\n  modalStore: ModalStore;\r\n  profileStore: ProfileStore;\r\n  commentStore: CommentStore;\r\n}\r\n\r\nexport const store: Store = {\r\n  activityStore: new ActivityStore(),\r\n  commonStore: new CommonStore(),\r\n  userStore: new UserStore(),\r\n  modalStore: new ModalStore(),\r\n  profileStore: new ProfileStore(),\r\n  commentStore: new CommentStore(),\r\n};\r\n\r\nexport const StoreContext = createContext(store);\r\n\r\nexport const useStore = () => {\r\n  return useContext(StoreContext);\r\n};\r\n","import { makeAutoObservable, reaction } from 'mobx';\r\n\r\nimport { ServerError } from '../models/serverError';\r\n\r\nexport default class CommonStore {\r\n  error: ServerError | null = null;\r\n  token: string | null = localStorage.getItem('jwt');\r\n  appLoaded = false;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n\r\n    reaction(\r\n      () => this.token,\r\n      token => {\r\n        if (token) {\r\n          localStorage.setItem('jwt', token);\r\n        } else {\r\n          localStorage.removeItem('jwt');\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  setServerError = (error: ServerError) => {\r\n    this.error = error;\r\n  };\r\n\r\n  setToken = (token: string | null) => {\r\n    this.token = token;\r\n  };\r\n\r\n  setAppLoaded = () => {\r\n    this.appLoaded = true;\r\n  };\r\n}\r\n","import { makeAutoObservable } from 'mobx';\r\n\r\ninterface Modal {\r\n  open: boolean;\r\n  body: JSX.Element | null;\r\n}\r\n\r\nexport default class ModalStore {\r\n  modal: Modal = {\r\n    open: false,\r\n    body: null,\r\n  };\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  openModal = (content: JSX.Element) => {\r\n    this.modal.open = true;\r\n    this.modal.body = content;\r\n  };\r\n\r\n  closeModal = () => {\r\n    this.modal.open = false;\r\n    this.modal.body = null;\r\n  };\r\n}\r\n","import {\n  HubConnection,\n  HubConnectionBuilder,\n  LogLevel,\n} from '@microsoft/signalr';\nimport { makeAutoObservable, runInAction } from 'mobx';\n\nimport { ChatComment } from '../models/comment';\nimport { store } from './store';\n\nexport default class CommentStore {\n  comments: ChatComment[] = [];\n  hubConnection: HubConnection | null = null;\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  createHubConnection = (activityId: string) => {\n    if (store.activityStore.selectedActivity) {\n      this.hubConnection = new HubConnectionBuilder()\n        .withUrl(process.env.REACT_APP_CHAT_URL + '?activityId=' + activityId, {\n          accessTokenFactory: () => store.userStore.user?.token!,\n        })\n        .withAutomaticReconnect()\n        .configureLogging(LogLevel.Information)\n        .build();\n\n      this.hubConnection\n        .start()\n        .catch(error =>\n          console.log('Error establishing the connection: ' + error)\n        );\n\n      this.hubConnection.on('LoadComments', (comments: ChatComment[]) => {\n        runInAction(() => {\n          comments.forEach(comment => {\n            comment.createdAt = new Date(comment.createdAt + 'Z');\n          });\n          this.comments = comments;\n        });\n      });\n\n      this.hubConnection.on('ReceiveComment', (comment: ChatComment) => {\n        runInAction(() => {\n          comment.createdAt = new Date(comment.createdAt);\n          this.comments.unshift(comment);\n        });\n      });\n    }\n  };\n\n  stopHubConnection = () => {\n    this.hubConnection\n      ?.stop()\n      .catch(error => console.log('Error stopping connection: ', error));\n  };\n\n  clearComments = () => {\n    this.comments = [];\n    this.stopHubConnection();\n  };\n\n  addComment = async (values: any) => {\n    values.activityId = store.activityStore.selectedActivity?.id;\n    try {\n      await this.hubConnection?.invoke('SendComment', values);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport { Menu, Container, Button, Image, Dropdown } from 'semantic-ui-react';\r\n\r\nimport { useStore } from '../stores/store';\r\n\r\nconst NavBar = () => {\r\n  const {\r\n    userStore: { user, logout },\r\n  } = useStore();\r\n  return (\r\n    <Menu inverted fixed=\"top\">\r\n      <Container>\r\n        <Menu.Item as={NavLink} to=\"/\" exact header>\r\n          <img src=\"/assets/logo.png\" alt=\"logo\" style={{ marginRight: 10 }} />\r\n          Reactivities\r\n        </Menu.Item>\r\n        <Menu.Item as={NavLink} to=\"/activities\" name=\"Activities\" />\r\n        <Menu.Item as={NavLink} to=\"/errors\" name=\"Errors\" />\r\n        <Menu.Item>\r\n          <Button\r\n            positive\r\n            content=\"Create activity\"\r\n            as={NavLink}\r\n            to=\"/createActivity\"\r\n          />\r\n        </Menu.Item>\r\n        <Menu.Item position=\"right\">\r\n          <Image\r\n            src={user?.image || '/assets/user.png'}\r\n            avatar\r\n            spaced=\"right\"\r\n          />\r\n          <Dropdown pointing=\"top left\" text={user?.displayName}>\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item\r\n                as={Link}\r\n                to={`/profiles/${user?.username}`}\r\n                text=\"My Profile\"\r\n                icon=\"user\"\r\n              />\r\n              <Dropdown.Item onClick={logout} text=\"Logout\" icon=\"power\" />\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </Menu.Item>\r\n      </Container>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default observer(NavBar);\r\n","import { observer } from 'mobx-react-lite';\r\nimport { SyntheticEvent } from 'react';\r\nimport { Button, Reveal } from 'semantic-ui-react';\r\n\r\nimport { Profile } from '../../app/models/profile';\r\nimport { useStore } from '../../app/stores/store';\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nconst FollowButton = ({ profile }: Props) => {\r\n  const { profileStore, userStore } = useStore();\r\n  const { updateFollowing, loading } = profileStore;\r\n\r\n  if (userStore.user?.username === profile.username) return null;\r\n\r\n  const handleFollow = (e: SyntheticEvent, username: string) => {\r\n    e.preventDefault();\r\n    profile.following\r\n      ? updateFollowing(username, false)\r\n      : updateFollowing(username, true);\r\n  };\r\n\r\n  return (\r\n    <Reveal animated=\"move\">\r\n      <Reveal.Content visible style={{ width: '100%' }}>\r\n        <Button\r\n          fluid\r\n          color=\"teal\"\r\n          content={profile.following ? 'Following' : 'Not following'}\r\n        />\r\n      </Reveal.Content>\r\n      <Reveal.Content hidden style={{ width: '100%' }}>\r\n        <Button\r\n          fluid\r\n          basic\r\n          color={profile.following ? 'red' : 'green'}\r\n          content={profile.following ? 'Unfollow' : 'Follow'}\r\n          loading={loading}\r\n          onClick={e => handleFollow(e, profile.username)}\r\n        />\r\n      </Reveal.Content>\r\n    </Reveal>\r\n  );\r\n};\r\n\r\nexport default observer(FollowButton);\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, Icon, Image } from 'semantic-ui-react';\r\n\r\nimport { Profile } from '../../app/models/profile';\r\nimport FollowButton from './FollowButton';\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nconst ProfileCard = ({ profile }: Props) => {\r\n  const truncate = (str: string | undefined) => {\r\n    if (str) {\r\n      return str.length > 40 ? str.substring(0, 37) + '...' : str;\r\n    }\r\n  };\r\n  return (\r\n    <Card as={Link} to={`/profiles/${profile.username}`}>\r\n      <Image src={profile.image || '/assets/user.png'} />\r\n      <Card.Content>\r\n        <Card.Header>{profile.displayName}</Card.Header>\r\n        <Card.Description>{truncate(profile.bio)}</Card.Description>\r\n      </Card.Content>\r\n      <Card.Content extra>\r\n        <Icon name=\"user\" />\r\n        {profile.followersCount} followers\r\n      </Card.Content>\r\n      <FollowButton profile={profile} />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default observer(ProfileCard);\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Image, List, Popup } from 'semantic-ui-react';\r\n\r\nimport { Profile } from '../../../app/models/profile';\r\nimport ProfileCard from '../../profiles/ProfileCard';\r\n\r\ninterface Props {\r\n  attendees: Profile[];\r\n}\r\n\r\nconst ActivityListItemAttendee = ({ attendees }: Props) => {\r\n  const styles = {\r\n    borderColor: 'orange',\r\n    borderWidth: 3,\r\n  };\r\n  return (\r\n    <List horizontal>\r\n      {attendees.map(attendee => (\r\n        <Popup\r\n          hoverable\r\n          key={attendee.username}\r\n          trigger={\r\n            <List.Item\r\n              key={attendee.username}\r\n              as={Link}\r\n              to={`/profiles/${attendee.username}`}\r\n            >\r\n              <Image\r\n                style={attendee.following ? styles : null}\r\n                bordered\r\n                size=\"mini\"\r\n                circular\r\n                src={attendee.image || '/assets/user.png'}\r\n              />\r\n            </List.Item>\r\n          }\r\n        >\r\n          <Popup.Content>\r\n            <ProfileCard profile={attendee} />\r\n          </Popup.Content>\r\n        </Popup>\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityListItemAttendee);\r\n","import { Link } from 'react-router-dom';\r\nimport { Button, Icon, Item, Label, Segment } from 'semantic-ui-react';\r\nimport { format } from 'date-fns';\r\n\r\nimport { Activity } from '../../../app/models/activity';\r\nimport ActivityListItemAttendee from './ActivityListItemAttendee';\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nconst ActivityListItem = ({ activity }: Props) => {\r\n  return (\r\n    <Segment.Group>\r\n      <Segment>\r\n        {activity.isCancelled && (\r\n          <Label\r\n            attached=\"top\"\r\n            color=\"red\"\r\n            content=\"Cancelled\"\r\n            style={{ textAlign: 'center' }}\r\n          />\r\n        )}\r\n        <Item.Group>\r\n          <Item>\r\n            <Item.Image\r\n              style={{ marginBottom: 3 }}\r\n              size=\"tiny\"\r\n              circular\r\n              src={activity.host?.image || '/assets/user.png'}\r\n            />\r\n            <Item.Content>\r\n              <Item.Header as={Link} to={`/activities/${activity.id}`}>\r\n                {activity.title}\r\n              </Item.Header>\r\n              <Item.Description>\r\n                Hosted by{' '}\r\n                <Link to={`/profiles/${activity.host?.username}`}>\r\n                  {activity.host?.displayName}\r\n                </Link>\r\n              </Item.Description>\r\n              {activity.isHost && (\r\n                <Item.Description>\r\n                  <Label basic color=\"orange\">\r\n                    You are hosting this activity\r\n                  </Label>\r\n                </Item.Description>\r\n              )}\r\n              {activity.isGoing && !activity.isHost && (\r\n                <Item.Description>\r\n                  <Label basic color=\"green\">\r\n                    You are going to this activity\r\n                  </Label>\r\n                </Item.Description>\r\n              )}\r\n            </Item.Content>\r\n          </Item>\r\n        </Item.Group>\r\n      </Segment>\r\n      <Segment>\r\n        <span>\r\n          <Icon name=\"clock\" /> {format(activity.date!, 'dd MMM yyyy h:mm a')}\r\n          <Icon name=\"marker\" /> {activity.venue}\r\n        </span>\r\n      </Segment>\r\n      <Segment secondary>\r\n        <ActivityListItemAttendee attendees={activity.attendees!} />\r\n      </Segment>\r\n      <Segment clearing>\r\n        <span>{activity.description}</span>\r\n        <Button\r\n          as={Link}\r\n          to={`/activities/${activity.id}`}\r\n          color=\"teal\"\r\n          floated=\"right\"\r\n          content=\"View\"\r\n        />\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n};\r\n\r\nexport default ActivityListItem;\r\n","import { observer } from 'mobx-react-lite';\r\nimport { Fragment } from 'react';\r\nimport { Header } from 'semantic-ui-react';\r\n\r\nimport { useStore } from '../../../app/stores/store';\r\n\r\nimport ActivityListItem from './ActivityListItem';\r\n\r\nconst ActivityList = () => {\r\n  const { activityStore } = useStore();\r\n  const { groupedActivities } = activityStore;\r\n\r\n  return (\r\n    <>\r\n      {groupedActivities.map(([group, activities]) => (\r\n        <Fragment key={group}>\r\n          <Header sub color=\"teal\">\r\n            {group}\r\n          </Header>\r\n\r\n          {activities.map((activity) => (\r\n            <ActivityListItem key={activity.id} activity={activity} />\r\n          ))}\r\n        </Fragment>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityList);\r\n","import { observer } from 'mobx-react-lite';\r\nimport Calendar from 'react-calendar';\r\nimport { Header, Menu } from 'semantic-ui-react';\r\n\r\nimport { useStore } from '../../../app/stores/store';\r\n\r\nconst ActivityFilters = () => {\r\n  const {\r\n    activityStore: { predicate, setPredicate },\r\n  } = useStore();\r\n  return (\r\n    <>\r\n      <Menu vertical size=\"large\" style={{ width: '100%', marginTop: 25 }}>\r\n        <Header icon=\"filter\" attached color=\"teal\" content=\"Filters\" />\r\n        <Menu.Item\r\n          active={predicate.has('all')}\r\n          onClick={() => setPredicate('all', 'true')}\r\n          content=\"All Activities\"\r\n        />\r\n        <Menu.Item\r\n          active={predicate.has('isGoing')}\r\n          onClick={() => setPredicate('isGoing', 'true')}\r\n          content=\"I'm going\"\r\n        />\r\n        <Menu.Item\r\n          active={predicate.has('isHost')}\r\n          onClick={() => setPredicate('isHost', 'true')}\r\n          content=\"I'm hosting\"\r\n        />\r\n      </Menu>\r\n      <Header />\r\n      <Calendar\r\n        onChange={date => setPredicate('startDate', date)}\r\n        value={predicate.get('startDate') || new Date()}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityFilters);\r\n","import { Fragment } from 'react';\r\nimport { Segment, Button, Placeholder } from 'semantic-ui-react';\r\n\r\nexport default function ActivityListItemPlaceholder() {\r\n  return (\r\n    <Fragment>\r\n      <Placeholder fluid style={{ marginTop: 25 }}>\r\n        <Segment.Group>\r\n          <Segment style={{ minHeight: 110 }}>\r\n            <Placeholder>\r\n              <Placeholder.Header image>\r\n                <Placeholder.Line />\r\n                <Placeholder.Line />\r\n              </Placeholder.Header>\r\n              <Placeholder.Paragraph>\r\n                <Placeholder.Line />\r\n              </Placeholder.Paragraph>\r\n            </Placeholder>\r\n          </Segment>\r\n          <Segment>\r\n            <Placeholder>\r\n              <Placeholder.Line />\r\n              <Placeholder.Line />\r\n            </Placeholder>\r\n          </Segment>\r\n          <Segment secondary style={{ minHeight: 70 }} />\r\n          <Segment clearing>\r\n            <Button disabled color=\"blue\" floated=\"right\" content=\"View\" />\r\n          </Segment>\r\n        </Segment.Group>\r\n      </Placeholder>\r\n    </Fragment>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { Grid, Loader } from 'semantic-ui-react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\n\r\nimport { useStore } from '../../../app/stores/store';\r\nimport ActivityList from './ActivityList';\r\nimport ActivityFilters from './ActivityFilters';\r\nimport { PagingParams } from '../../../app/models/pagination';\r\nimport ActivityListItemPlaceholder from './ActivityListItemPlaceholder';\r\n\r\nconst ActivityDashboard = () => {\r\n  const { activityStore } = useStore();\r\n  const { loadActivities, activityRegistry, setPagingParams, pagination } =\r\n    activityStore;\r\n  const [loadingNext, setLoadingNext] = useState(false);\r\n\r\n  const handleGetNext = () => {\r\n    setLoadingNext(true);\r\n    setPagingParams(new PagingParams(pagination!.currentPage + 1));\r\n    loadActivities().then(() => setLoadingNext(false));\r\n  };\r\n\r\n  useEffect(() => {\r\n    activityRegistry.size <= 1 && loadActivities();\r\n  }, [activityRegistry.size, loadActivities]);\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width=\"10\">\r\n        {activityStore.loadingInitial && !loadingNext ? (\r\n          <>\r\n            <ActivityListItemPlaceholder />\r\n            <ActivityListItemPlaceholder />\r\n          </>\r\n        ) : (\r\n          <InfiniteScroll\r\n            pageStart={0}\r\n            loadMore={handleGetNext}\r\n            hasMore={\r\n              !loadingNext &&\r\n              !!pagination &&\r\n              pagination.currentPage < pagination.totalPages\r\n            }\r\n            initialLoad={false}\r\n          >\r\n            <ActivityList />\r\n          </InfiniteScroll>\r\n        )}\r\n      </Grid.Column>\r\n      <Grid.Column width=\"6\">\r\n        <ActivityFilters />\r\n      </Grid.Column>\r\n      <Grid.Column width={10}>\r\n        <Loader active={loadingNext} />\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityDashboard);\r\n","import { useField } from 'formik';\r\nimport React from 'react';\r\nimport { Form, Label } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  type?: string;\r\n  label?: string;\r\n}\r\n\r\nconst MyTextInput = (props: Props) => {\r\n  const [field, meta] = useField(props.name);\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <input {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n};\r\n\r\nexport default MyTextInput;\r\n","import { ErrorMessage, Form, Formik } from 'formik';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Button, Header, Label } from 'semantic-ui-react';\r\n\r\nimport MyTextInput from '../../app/common/form/MyTextInput';\r\nimport { useStore } from '../../app/stores/store';\r\n\r\nconst LoginForm = () => {\r\n  const { userStore } = useStore();\r\n  return (\r\n    <Formik\r\n      initialValues={{ email: '', password: '', error: null }}\r\n      onSubmit={(values, { setErrors }) =>\r\n        userStore\r\n          .login(values)\r\n          .catch((error) => setErrors({ error: 'Invalid email or password' }))\r\n      }\r\n    >\r\n      {({ handleSubmit, isSubmitting, errors }) => (\r\n        <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n          <Header\r\n            as=\"h2\"\r\n            content=\"Login to Reactivities\"\r\n            color=\"teal\"\r\n            textAlign=\"center\"\r\n          />\r\n          <MyTextInput name=\"email\" placeholder=\"Email\" />\r\n          <MyTextInput name=\"password\" placeholder=\"Password\" type=\"password\" />\r\n          <ErrorMessage\r\n            name=\"error\"\r\n            render={() => (\r\n              <Label\r\n                style={{ marginBottom: 10 }}\r\n                basic\r\n                color=\"red\"\r\n                content={errors.error}\r\n              />\r\n            )}\r\n          />\r\n          <Button\r\n            loading={isSubmitting}\r\n            positive\r\n            content=\"Login\"\r\n            type=\"submit\"\r\n            fluid\r\n          />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default observer(LoginForm);\r\n","import React from 'react';\r\nimport { Message } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n  errors: any;\r\n}\r\n\r\nconst ValidationErrors = ({ errors }: Props) => {\r\n  return (\r\n    <Message error>\r\n      {errors && (\r\n        <Message.List>\r\n          {errors.map((err: any, i: any) => (\r\n            <Message.Item key={i}>{err}</Message.Item>\r\n          ))}\r\n        </Message.List>\r\n      )}\r\n    </Message>\r\n  );\r\n};\r\n\r\nexport default ValidationErrors;\r\n","import { ErrorMessage, Form, Formik } from 'formik';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Button, Header } from 'semantic-ui-react';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useStore } from '../../app/stores/store';\r\n\r\nimport MyTextInput from '../../app/common/form/MyTextInput';\r\nimport ValidationErrors from '../errors/ValidationErrors';\r\n\r\nconst RegisterForm = () => {\r\n  const { userStore } = useStore();\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: '',\r\n        password: '',\r\n        displayName: '',\r\n        username: '',\r\n        error: null,\r\n      }}\r\n      onSubmit={(values, { setErrors }) =>\r\n        userStore.register(values).catch((error) => setErrors({ error }))\r\n      }\r\n      validationSchema={Yup.object({\r\n        displayName: Yup.string().required(),\r\n        username: Yup.string().required(),\r\n        email: Yup.string().required().email(),\r\n        password: Yup.string().required(),\r\n      })}\r\n    >\r\n      {({ handleSubmit, isSubmitting, errors, isValid, dirty }) => (\r\n        <Form\r\n          className=\"ui form error\"\r\n          onSubmit={handleSubmit}\r\n          autoComplete=\"off\"\r\n        >\r\n          <Header\r\n            as=\"h2\"\r\n            content=\"Sign up to Reactivities\"\r\n            color=\"teal\"\r\n            textAlign=\"center\"\r\n          />\r\n          <MyTextInput name=\"email\" placeholder=\"Email\" />\r\n          <MyTextInput name=\"username\" placeholder=\"Username\" />\r\n          <MyTextInput name=\"password\" placeholder=\"Password\" type=\"password\" />\r\n          <MyTextInput name=\"displayName\" placeholder=\"DisplayName\" />\r\n          <ErrorMessage\r\n            name=\"error\"\r\n            render={() => <ValidationErrors errors={errors.error} />}\r\n          />\r\n          <Button\r\n            disabled={!isValid || !dirty || isSubmitting}\r\n            loading={isSubmitting}\r\n            positive\r\n            content=\"Register\"\r\n            type=\"submit\"\r\n            fluid\r\n          />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default observer(RegisterForm);\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Header, Segment, Image, Button } from 'semantic-ui-react';\r\n\r\nimport { useStore } from '../../app/stores/store';\r\nimport LoginForm from '../users/LoginForm';\r\nimport RegisterForm from '../users/RegisterForm';\r\n\r\nconst HomePage = () => {\r\n  const { userStore, modalStore } = useStore();\r\n  return (\r\n    <Segment inverted textAlign=\"center\" vertical className=\"masthead\">\r\n      <Container text>\r\n        <Header as=\"h1\" inverted>\r\n          <Image\r\n            size=\"massive\"\r\n            src=\"/assets/logo.png\"\r\n            alt=\"logo\"\r\n            style={{ marginBottom: 12 }}\r\n          />\r\n          Reactivities\r\n        </Header>\r\n        {userStore.isLoggedIn ? (\r\n          <>\r\n            <Header as=\"h2\" inverted content=\"Welcome to Reactivities\" />\r\n            <Button as={Link} to=\"/activities\" size=\"huge\" inverted>\r\n              Go to Activities\r\n            </Button>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Button\r\n              onClick={() => modalStore.openModal(<LoginForm />)}\r\n              size=\"huge\"\r\n              inverted\r\n            >\r\n              Login\r\n            </Button>\r\n            <Button\r\n              onClick={() => modalStore.openModal(<RegisterForm />)}\r\n              size=\"huge\"\r\n              inverted\r\n            >\r\n              Register\r\n            </Button>\r\n          </>\r\n        )}\r\n      </Container>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport default observer(HomePage);\r\n","export const categoryOptions = [\r\n  { text: 'Drinks', value: 'drinks' },\r\n  { text: 'Culture', value: 'culture' },\r\n  { text: 'Film', value: 'film' },\r\n  { text: 'Food', value: 'food' },\r\n  { text: 'Music', value: 'music' },\r\n  { text: 'Travel', value: 'travel' },\r\n];\r\n","import React from 'react';\r\nimport { Dimmer, Loader } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n  inverted?: boolean;\r\n  content: string;\r\n}\r\n\r\nconst LoadingComponent = ({\r\n  inverted = true,\r\n  content = 'Loading...',\r\n}: Props) => {\r\n  return (\r\n    <Dimmer active={true} inverted={inverted}>\r\n      <Loader content={content} />\r\n    </Dimmer>\r\n  );\r\n};\r\n\r\nexport default LoadingComponent;\r\n","import { useField } from 'formik';\r\nimport React from 'react';\r\nimport { Form, Label } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  rows: number;\r\n  label?: string;\r\n}\r\n\r\nconst MyTextArea = (props: Props) => {\r\n  const [field, meta] = useField(props.name);\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <textarea {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n};\r\n\r\nexport default MyTextArea;\r\n","import { useField } from 'formik';\r\nimport React from 'react';\r\nimport { Form, Label, Select } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  options: any;\r\n  label?: string;\r\n}\r\n\r\nconst MySelectInput = (props: Props) => {\r\n  const [field, meta, helpers] = useField(props.name);\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <Select\r\n        clearable\r\n        options={props.options}\r\n        value={field.value || null}\r\n        onChange={(evt, data) => helpers.setValue(data.value)}\r\n        onBlur={() => helpers.setTouched(true)}\r\n        placeholder={props.placeholder}\r\n      />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n};\r\n\r\nexport default MySelectInput;\r\n","import { useField } from 'formik';\r\nimport React from 'react';\r\nimport { Form, Label } from 'semantic-ui-react';\r\nimport DatePicker, { ReactDatePickerProps } from 'react-datepicker';\r\n\r\nconst MyDateInput = (props: Partial<ReactDatePickerProps>) => {\r\n  const [field, meta, helpers] = useField(props.name!);\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <DatePicker\r\n        {...field}\r\n        {...props}\r\n        selected={(field.value && new Date(field.value)) || null}\r\n        onChange={(value) => helpers.setValue(value)}\r\n      />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n};\r\n\r\nexport default MyDateInput;\r\n","import { observer } from 'mobx-react-lite';\r\nimport { useEffect, useState } from 'react';\r\nimport { Link, useHistory, useParams } from 'react-router-dom';\r\nimport { Segment, Button, Header } from 'semantic-ui-react';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { Formik, Form } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useStore } from '../../../app/stores/store';\r\nimport { ActivityFormValues } from '../../../app/models/activity';\r\nimport { categoryOptions } from '../../../app/common/options/categoryOptions';\r\n\r\nimport LoadingComponent from '../../../app/layout/LoadingComponent';\r\nimport MyTextInput from '../../../app/common/form/MyTextInput';\r\nimport MyTextArea from '../../../app/common/form/MyTextArea';\r\nimport MySelectInput from '../../../app/common/form/MySelectInput';\r\nimport MyDateInput from '../../../app/common/form/MyDateInput';\r\n\r\nconst ActivityForm = () => {\r\n  const history = useHistory();\r\n  const { activityStore } = useStore();\r\n  const { loadingInitial, createActivity, updateActivity, loadActivity } =\r\n    activityStore;\r\n  const { id } = useParams<{ id: string }>();\r\n\r\n  const [activity, setActivity] = useState<ActivityFormValues>(\r\n    new ActivityFormValues()\r\n  );\r\n\r\n  const validationSchema = Yup.object({\r\n    title: Yup.string().required('The activity title is required'),\r\n    description: Yup.string().required('The activity description is required'),\r\n    category: Yup.string().required(),\r\n    date: Yup.string().required('Date is required').nullable(),\r\n    venue: Yup.string().required(),\r\n    city: Yup.string().required(),\r\n  });\r\n\r\n  const handleFormSubmit = (activity: ActivityFormValues) => {\r\n    if (!activity.id) {\r\n      let newActivity = {\r\n        ...activity,\r\n        id: uuid(),\r\n      };\r\n      createActivity(newActivity).then(() => history.push(`/activities`));\r\n    } else {\r\n      updateActivity(activity).then(() => {\r\n        history.push(`/activities/${activity.id}`);\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (id)\r\n      loadActivity(id).then((activity) => {\r\n        setActivity(new ActivityFormValues(activity));\r\n      });\r\n  }, [id, loadActivity]);\r\n\r\n  if (loadingInitial) return <LoadingComponent content=\"Loading activity...\" />;\r\n\r\n  return (\r\n    <Segment clearing>\r\n      <Header content=\"Activity Details\" sub color=\"teal\" />\r\n      <Formik\r\n        validationSchema={validationSchema}\r\n        enableReinitialize\r\n        initialValues={activity}\r\n        onSubmit={(values) => handleFormSubmit(values)}\r\n      >\r\n        {({ handleSubmit, isValid, isSubmitting, dirty }) => (\r\n          <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n            <MyTextInput name=\"title\" placeholder=\"Title\" />\r\n            <MyTextArea rows={3} placeholder=\"Description\" name=\"description\" />\r\n            <MySelectInput\r\n              options={categoryOptions}\r\n              placeholder=\"Category\"\r\n              name=\"category\"\r\n            />\r\n            <MyDateInput\r\n              placeholderText=\"Date\"\r\n              name=\"date\"\r\n              showTimeSelect\r\n              timeCaption=\"time\"\r\n              dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n            />\r\n            <Header content=\"Location Details\" sub color=\"teal\" />\r\n            <MyTextInput placeholder=\"City\" name=\"city\" />\r\n            <MyTextInput placeholder=\"Venue\" name=\"venue\" />\r\n            <Button\r\n              disabled={isSubmitting || !dirty || !isValid}\r\n              loading={isSubmitting}\r\n              floated=\"right\"\r\n              positive\r\n              type=\"submit\"\r\n              content=\"Submit\"\r\n            />\r\n            <Button\r\n              as={Link}\r\n              to=\"/activities\"\r\n              floated=\"right\"\r\n              type=\"button\"\r\n              content=\"Cancel\"\r\n            />\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityForm);\r\n","import { formatDistanceToNow } from 'date-fns';\r\nimport { Formik, Form, FieldProps, Field } from 'formik';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Segment, Header, Comment, Loader } from 'semantic-ui-react';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useStore } from '../../../app/stores/store';\r\n\r\ninterface Props {\r\n  activityId: string;\r\n}\r\n\r\nexport default observer(function ActivityDetailedChat({ activityId }: Props) {\r\n  const { commentStore } = useStore();\r\n\r\n  useEffect(() => {\r\n    if (activityId) {\r\n      commentStore.createHubConnection(activityId);\r\n    }\r\n\r\n    return () => {\r\n      commentStore.clearComments();\r\n    };\r\n  }, [activityId, commentStore]);\r\n  return (\r\n    <>\r\n      <Segment\r\n        textAlign=\"center\"\r\n        attached=\"top\"\r\n        inverted\r\n        color=\"teal\"\r\n        style={{ border: 'none' }}\r\n      >\r\n        <Header>Chat about this event</Header>\r\n      </Segment>\r\n      <Segment attached clearing>\r\n        <Formik\r\n          onSubmit={(values, { resetForm }) => {\r\n            commentStore.addComment(values).then(() => resetForm());\r\n          }}\r\n          validationSchema={Yup.object({\r\n            body: Yup.string().required(),\r\n          })}\r\n          initialValues={{ body: '' }}\r\n        >\r\n          {({ isSubmitting, isValid, handleSubmit }) => (\r\n            <Form className=\"ui form\">\r\n              <Field name=\"body\">\r\n                {(props: FieldProps) => (\r\n                  <div style={{ position: 'relative' }}>\r\n                    <Loader active={isSubmitting} />\r\n                    <textarea\r\n                      placeholder=\"Enter your comment (Enter to submit, SHIFT + enter for new line)\"\r\n                      rows={2}\r\n                      {...props.field}\r\n                      onKeyPress={(e) => {\r\n                        if (e.key === 'Enter' && e.shiftKey) {\r\n                          return;\r\n                        }\r\n                        if (e.key === 'Enter' && !e.shiftKey) {\r\n                          e.preventDefault();\r\n                          isValid && handleSubmit();\r\n                        }\r\n                      }}\r\n                    />\r\n                  </div>\r\n                )}\r\n              </Field>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n        <Comment.Group>\r\n          {commentStore.comments.map((comment) => (\r\n            <Comment key={comment.id}>\r\n              <Comment.Avatar src={comment.image || '/assets/user.png'} />\r\n              <Comment.Content>\r\n                <Comment.Author as={Link} to={`/profiles/${comment.username}`}>\r\n                  {comment.displayName}\r\n                </Comment.Author>\r\n                <Comment.Metadata>\r\n                  <div>{formatDistanceToNow(comment.createdAt)} ago</div>\r\n                </Comment.Metadata>\r\n                <Comment.Text style={{ whiteSpace: 'pre-wrap' }}>\r\n                  {comment.body}\r\n                </Comment.Text>\r\n              </Comment.Content>\r\n            </Comment>\r\n          ))}\r\n        </Comment.Group>\r\n      </Segment>\r\n    </>\r\n  );\r\n});\r\n","import { format } from 'date-fns';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Segment, Grid, Icon } from 'semantic-ui-react';\r\n\r\nimport { Activity } from '../../../app/models/activity';\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nexport default observer(function ActivityDetailedInfo({ activity }: Props) {\r\n  return (\r\n    <Segment.Group>\r\n      <Segment attached=\"top\">\r\n        <Grid>\r\n          <Grid.Column width={1}>\r\n            <Icon size=\"large\" color=\"teal\" name=\"info\" />\r\n          </Grid.Column>\r\n          <Grid.Column width={15}>\r\n            <p>{activity.description}</p>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n      <Segment attached>\r\n        <Grid verticalAlign=\"middle\">\r\n          <Grid.Column width={1}>\r\n            <Icon name=\"calendar\" size=\"large\" color=\"teal\" />\r\n          </Grid.Column>\r\n          <Grid.Column width={15}>\r\n            <span>{format(activity.date!, 'dd MMM yyyy h:mm aa')}</span>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n      <Segment attached>\r\n        <Grid verticalAlign=\"middle\">\r\n          <Grid.Column width={1}>\r\n            <Icon name=\"marker\" size=\"large\" color=\"teal\" />\r\n          </Grid.Column>\r\n          <Grid.Column width={11}>\r\n            <span>\r\n              {activity.venue}, {activity.city}\r\n            </span>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n});\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Header, Item, Segment, Image, Label } from 'semantic-ui-react';\r\nimport { format } from 'date-fns';\r\n\r\nimport { Activity } from '../../../app/models/activity';\r\nimport { useStore } from '../../../app/stores/store';\r\n\r\nconst activityImageStyle = {\r\n  filter: 'brightness(30%)',\r\n};\r\n\r\nconst activityImageTextStyle = {\r\n  position: 'absolute',\r\n  bottom: '5%',\r\n  left: '5%',\r\n  width: '100%',\r\n  height: 'auto',\r\n  color: 'white',\r\n};\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nconst ActivityDetailedHeader = ({ activity }: Props) => {\r\n  const {\r\n    activityStore: { updateAttendance, cancelActivityToggle, loading },\r\n  } = useStore();\r\n  return (\r\n    <Segment.Group>\r\n      <Segment basic attached=\"top\" style={{ padding: '0' }}>\r\n        {activity.isCancelled && (\r\n          <Label\r\n            style={{ position: 'absolute', zIndex: 1000, left: -40, top: 20 }}\r\n            ribbon\r\n            color=\"red\"\r\n            content=\"Cancelled\"\r\n          />\r\n        )}\r\n        <Image\r\n          src={`/assets/categoryImages/${activity.category}.jpg`}\r\n          fluid\r\n          style={activityImageStyle}\r\n        />\r\n        <Segment style={activityImageTextStyle} basic>\r\n          <Item.Group>\r\n            <Item>\r\n              <Item.Content>\r\n                <Header\r\n                  size=\"huge\"\r\n                  content={activity.title}\r\n                  style={{ color: 'white' }}\r\n                />\r\n                <p>{format(activity.date!, 'dd MMM yyyy')}</p>\r\n                <p>\r\n                  Hosted by{' '}\r\n                  <strong>\r\n                    <Link to={`/profiles/${activity.host?.username}`}>\r\n                      {activity.host?.displayName}\r\n                    </Link>\r\n                  </strong>\r\n                </p>\r\n              </Item.Content>\r\n            </Item>\r\n          </Item.Group>\r\n        </Segment>\r\n      </Segment>\r\n      <Segment clearing attached=\"bottom\">\r\n        {activity.isHost ? (\r\n          <>\r\n            <Button\r\n              color={activity.isCancelled ? 'green' : 'red'}\r\n              floated=\"left\"\r\n              basic\r\n              content={\r\n                activity.isCancelled\r\n                  ? 'Re-activate Activity'\r\n                  : 'Cancel Activity'\r\n              }\r\n              onClick={cancelActivityToggle}\r\n              loading={loading}\r\n            />\r\n            <Button\r\n              as={Link}\r\n              to={`/manage/${activity.id}`}\r\n              color=\"orange\"\r\n              disabled={activity.isCancelled}\r\n              floated=\"right\"\r\n            >\r\n              Manage Event\r\n            </Button>\r\n          </>\r\n        ) : activity.isGoing ? (\r\n          <Button loading={loading} onClick={updateAttendance}>\r\n            Cancel attendance\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            disabled={activity.isCancelled}\r\n            loading={loading}\r\n            onClick={updateAttendance}\r\n            color=\"teal\"\r\n          >\r\n            Join Activity\r\n          </Button>\r\n        )}\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityDetailedHeader);\r\n","import React from 'react';\r\nimport { Segment, List, Label, Item, Image } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport { observer } from 'mobx-react-lite';\r\n\r\nimport { Activity } from '../../../app/models/activity';\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nconst ActivityDetailedSidebar = ({ activity: { attendees, host } }: Props) => {\r\n  if (!attendees) return null;\r\n  return (\r\n    <>\r\n      <Segment\r\n        textAlign=\"center\"\r\n        style={{ border: 'none' }}\r\n        attached=\"top\"\r\n        secondary\r\n        inverted\r\n        color=\"teal\"\r\n      >\r\n        {attendees.length} {attendees.length === 1 ? 'Person' : 'People'} going\r\n      </Segment>\r\n      <Segment attached>\r\n        <List relaxed divided>\r\n          {attendees.map(attendee => (\r\n            <Item style={{ position: 'relative' }} key={attendee.username}>\r\n              {attendee.username === host?.username && (\r\n                <Label\r\n                  style={{ position: 'absolute' }}\r\n                  color=\"orange\"\r\n                  ribbon=\"right\"\r\n                >\r\n                  Host\r\n                </Label>\r\n              )}\r\n\r\n              <Image size=\"tiny\" src={attendee.image || '/assets/user.png'} />\r\n              <Item.Content verticalAlign=\"middle\">\r\n                <Item.Header as=\"h3\">\r\n                  <Link to={`/profiles/${attendee.username}`}>\r\n                    {attendee.displayName}\r\n                  </Link>\r\n                </Item.Header>\r\n                {attendee.following && (\r\n                  <Item.Extra style={{ color: 'orange' }}>Following</Item.Extra>\r\n                )}\r\n              </Item.Content>\r\n            </Item>\r\n          ))}\r\n        </List>\r\n      </Segment>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityDetailedSidebar);\r\n","import { observer } from 'mobx-react-lite';\r\nimport { useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Grid } from 'semantic-ui-react';\r\n\r\nimport LoadingComponent from '../../../app/layout/LoadingComponent';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport ActivityDetailedChat from './ActivityDetailedChat';\r\nimport ActivityDetailedInfo from './ActivityDetailedInfo';\r\nimport ActivityDetailedHeader from './ActivityDetailedHeader';\r\nimport ActivityDetailedSidebar from './ActivityDetailedSidebar';\r\n\r\nconst ActivityDetails = () => {\r\n  const { activityStore } = useStore();\r\n  const {\r\n    selectedActivity: activity,\r\n    loadActivity,\r\n    loadingInitial,\r\n    clearSelectedActivity,\r\n  } = activityStore;\r\n  const { id } = useParams<{ id: string }>();\r\n\r\n  useEffect(() => {\r\n    if (id) loadActivity(id);\r\n    return () => clearSelectedActivity();\r\n  }, [clearSelectedActivity, id, loadActivity]);\r\n\r\n  if (!activity || loadingInitial)\r\n    return <LoadingComponent content=\"Loading...\" />;\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width=\"10\">\r\n        <ActivityDetailedHeader activity={activity} />\r\n        <ActivityDetailedInfo activity={activity} />\r\n        <ActivityDetailedChat activityId={activity.id} />\r\n      </Grid.Column>\r\n      <Grid.Column width=\"6\">\r\n        <ActivityDetailedSidebar activity={activity} />\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityDetails);\r\n","import React, { useState } from 'react';\r\nimport { Button, Header, Segment } from 'semantic-ui-react';\r\nimport axios from 'axios';\r\n\r\nimport ValidationErrors from './ValidationErrors';\r\n\r\nexport default function TestErrors() {\r\n  const baseUrl = process.env.REACT_APP_API_URL;\r\n  const [errors, setErrors] = useState(null);\r\n\r\n  function handleNotFound() {\r\n    axios\r\n      .get(baseUrl + 'buggy/not-found')\r\n      .catch(err => console.log(err.response));\r\n  }\r\n\r\n  function handleBadRequest() {\r\n    axios\r\n      .get(baseUrl + 'buggy/bad-request')\r\n      .catch(err => console.log(err.response));\r\n  }\r\n\r\n  function handleServerError() {\r\n    axios\r\n      .get(baseUrl + 'buggy/server-error')\r\n      .catch(err => console.log(err.response));\r\n  }\r\n\r\n  function handleUnauthorised() {\r\n    axios\r\n      .get(baseUrl + 'buggy/unauthorised')\r\n      .catch(err => console.log(err.response));\r\n  }\r\n\r\n  function handleBadGuid() {\r\n    axios.get(baseUrl + 'activities/notaguid').catch(err => console.log(err));\r\n  }\r\n\r\n  function handleValidationError() {\r\n    axios.post(baseUrl + 'activities', {}).catch(err => setErrors(err));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header as=\"h1\" content=\"Test Error component\" />\r\n      <Segment>\r\n        <Button.Group widths=\"7\">\r\n          <Button onClick={handleNotFound} content=\"Not Found\" basic primary />\r\n          <Button\r\n            onClick={handleBadRequest}\r\n            content=\"Bad Request\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button\r\n            onClick={handleValidationError}\r\n            content=\"Validation Error\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button\r\n            onClick={handleServerError}\r\n            content=\"Server Error\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button\r\n            onClick={handleUnauthorised}\r\n            content=\"Unauthorised\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button onClick={handleBadGuid} content=\"Bad Guid\" basic primary />\r\n        </Button.Group>\r\n      </Segment>\r\n      {errors && <ValidationErrors errors={errors} />}\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Header, Icon, Segment } from 'semantic-ui-react';\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <Segment placeholder>\r\n      <Header icon>\r\n        <Icon name=\"search\" />\r\n        Oops - we've looked everywhere and could not find this.\r\n      </Header>\r\n      <Segment.Inline>\r\n        <Button as={Link} to=\"/activities\" primary>\r\n          Return to activities page\r\n        </Button>\r\n      </Segment.Inline>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Container, Header, Segment } from 'semantic-ui-react';\r\n\r\nimport { useStore } from '../../app/stores/store';\r\n\r\nconst ServerError = () => {\r\n  const { commonStore } = useStore();\r\n  return (\r\n    <Container>\r\n      <Header as=\"h1\" content=\"Server Error\" />\r\n      <Header sub as=\"h5\" color=\"red\" content={commonStore.error?.message} />\r\n      {commonStore.error?.details && (\r\n        <Segment>\r\n          <Header as=\"h4\" content=\"Stack Trace\" color=\"teal\" />\r\n          <code style={{ marginTop: 10 }}>{commonStore.error.details}</code>\r\n        </Segment>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default observer(ServerError);\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Modal } from 'semantic-ui-react';\r\n\r\nimport { useStore } from '../../stores/store';\r\n\r\nconst ModalContainer = () => {\r\n  const { modalStore } = useStore();\r\n  return (\r\n    <Modal\r\n      open={modalStore.modal.open}\r\n      onClose={modalStore.closeModal}\r\n      size=\"mini\"\r\n    >\r\n      <Modal.Content>{modalStore.modal.body}</Modal.Content>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default observer(ModalContainer);\r\n","import { Form, Formik } from 'formik';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Button } from 'semantic-ui-react';\r\nimport * as Yup from 'yup';\r\n\r\nimport MyTextArea from '../../app/common/form/MyTextArea';\r\nimport MyTextInput from '../../app/common/form/MyTextInput';\r\nimport { useStore } from '../../app/stores/store';\r\n\r\ninterface Props {\r\n  setEditMode: (editMode: boolean) => void;\r\n}\r\n\r\nconst ProfileEditForm = ({ setEditMode }: Props) => {\r\n  const {\r\n    profileStore: { profile, updateProfile },\r\n  } = useStore();\r\n  return (\r\n    <Formik\r\n      initialValues={{ displayName: profile?.displayName, bio: profile?.bio }}\r\n      onSubmit={(values) => {\r\n        updateProfile(values).then(() => {\r\n          setEditMode(false);\r\n        });\r\n      }}\r\n      validationSchema={Yup.object({\r\n        displayName: Yup.string().required(),\r\n      })}\r\n    >\r\n      {({ isSubmitting, isValid, dirty }) => (\r\n        <Form className=\"ui form\">\r\n          <MyTextInput placeholder=\"Display Name\" name=\"displayName\" />\r\n          <MyTextArea rows={3} placeholder=\"Add your bio\" name=\"bio\" />\r\n          <Button\r\n            positive\r\n            type=\"submit\"\r\n            loading={isSubmitting}\r\n            content=\"Update profile\"\r\n            floated=\"right\"\r\n            disabled={!isValid || !dirty}\r\n          />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default observer(ProfileEditForm);\r\n","import { observer } from 'mobx-react-lite';\r\nimport React, { useState } from 'react';\r\nimport { Button, Grid, Header, Tab } from 'semantic-ui-react';\r\n\r\nimport { useStore } from '../../app/stores/store';\r\nimport ProfileEditForm from './ProfileEditForm';\r\n\r\nconst ProfileAbout = () => {\r\n  const { profileStore } = useStore();\r\n  const { isCurrentUser, profile } = profileStore;\r\n  const [editMode, setEditMode] = useState(false);\r\n  return (\r\n    <Tab.Pane>\r\n      <Grid>\r\n        <Grid.Column width=\"16\">\r\n          <Header\r\n            floated=\"left\"\r\n            icon=\"user\"\r\n            content={`About ${profile?.displayName}`}\r\n          />\r\n          {isCurrentUser && (\r\n            <Button\r\n              floated=\"right\"\r\n              basic\r\n              content={editMode ? 'Cancel' : 'Edit Profile'}\r\n              onClick={() => setEditMode(!editMode)}\r\n            />\r\n          )}\r\n        </Grid.Column>\r\n        <Grid.Column width=\"16\">\r\n          {editMode ? (\r\n            <ProfileEditForm setEditMode={setEditMode} />\r\n          ) : (\r\n            <span style={{ whiteSpace: 'pre-wrap' }}>{profile?.bio}</span>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n};\r\n\r\nexport default observer(ProfileAbout);\r\n","import { format } from 'date-fns';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { SyntheticEvent, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, Grid, Header, Image, Tab, TabProps } from 'semantic-ui-react';\r\n\r\nimport { UserActivity } from '../../app/models/profile';\r\nimport { useStore } from '../../app/stores/store';\r\n\r\nconst panes = [\r\n  { menuItem: 'Feature Events', pane: { key: 'future' } },\r\n  { menuItem: 'Past Events', pane: { key: 'past' } },\r\n  { menuItem: 'Hosting', pane: { key: 'hosting' } },\r\n];\r\n\r\nconst ProfileActivities = () => {\r\n  const { profileStore } = useStore();\r\n  const { loadUserActivities, profile, loadingActivities, userActivities } =\r\n    profileStore;\r\n\r\n  useEffect(() => {\r\n    loadUserActivities(profile!.username);\r\n  }, [loadUserActivities, profile]);\r\n\r\n  const handleTabChange = (e: SyntheticEvent, data: TabProps) => {\r\n    loadUserActivities(\r\n      profile!.username,\r\n      panes[data.activeIndex as number].pane.key\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Tab.Pane loading={loadingActivities}>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header floated=\"left\" icon=\"calendar\" content=\"Activities\" />\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          <Tab\r\n            panes={panes}\r\n            menu={{ secondary: true, pointing: true }}\r\n            onTabChange={(e, data) => handleTabChange(e, data)}\r\n          />\r\n          <br />\r\n          <Card.Group itemsPerRow={4}>\r\n            {userActivities.map((activity: UserActivity) => (\r\n              <Card\r\n                as={Link}\r\n                to={`/activities/${activity.id}`}\r\n                key={activity.id}\r\n              >\r\n                <Image\r\n                  src={`/assets/categoryImages/${activity.category}.jpg`}\r\n                  style={{ minHeight: 100, objectFit: 'cover' }}\r\n                />\r\n                <Card.Content>\r\n                  <Card.Header textAlign=\"center\">{activity.title}</Card.Header>\r\n                  <Card.Meta textAlign=\"center\">\r\n                    <div>{format(new Date(activity.date), 'do LLL')}</div>\r\n                    <div>{format(new Date(activity.date), 'h:mm a')}</div>\r\n                  </Card.Meta>\r\n                </Card.Content>\r\n              </Card>\r\n            ))}\r\n          </Card.Group>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n};\r\n\r\nexport default observer(ProfileActivities);\r\n","import { observer } from 'mobx-react-lite';\r\nimport { Card, Grid, Header, Tab } from 'semantic-ui-react';\r\nimport { useStore } from '../../app/stores/store';\r\nimport ProfileCard from './ProfileCard';\r\n\r\nconst ProfileFollowings = () => {\r\n  const { profileStore } = useStore();\r\n  const { profile, followings, loadingFollowings, activeTab } = profileStore;\r\n\r\n  return (\r\n    <Tab.Pane loading={loadingFollowings}>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header\r\n            floated=\"left\"\r\n            icon=\"user\"\r\n            content={\r\n              activeTab === 3\r\n                ? `People following ${profile?.displayName}`\r\n                : `People ${profile?.displayName} is following`\r\n            }\r\n          />\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          <Card.Group itemsPerRow={4}>\r\n            {followings.map(profile => (\r\n              <ProfileCard key={profile.username} profile={profile} />\r\n            ))}\r\n          </Card.Group>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n};\r\n\r\nexport default observer(ProfileFollowings);\r\n","import React from 'react';\r\nimport { Cropper } from 'react-cropper';\r\nimport 'cropperjs/dist/cropper.css';\r\n\r\ninterface Props {\r\n  imagePreview: string;\r\n  setCropper: (cropper: Cropper) => void;\r\n}\r\n\r\nconst PhotoWidgetCropper = ({ imagePreview, setCropper }: Props) => {\r\n  return (\r\n    <Cropper\r\n      src={imagePreview}\r\n      style={{ height: 200, width: '100%' }}\r\n      initialAspectRatio={1}\r\n      aspectRatio={1}\r\n      preview=\".img-preview\"\r\n      guides={false}\r\n      viewMode={1}\r\n      autoCropArea={1}\r\n      background={false}\r\n      onInitialized={(cropper) => setCropper(cropper)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PhotoWidgetCropper;\r\n","import React, { useCallback } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { Header, Icon } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n  setFiles: (files: any) => void;\r\n}\r\n\r\nconst PhotoWidgetDropzone = ({ setFiles }: Props) => {\r\n  const dzStyles = {\r\n    border: 'dashed 3px #eee',\r\n    borderColor: '#eee',\r\n    borderRadius: '5px',\r\n    paddingTop: '30px',\r\n    textAlign: 'center' as 'center',\r\n    height: 200,\r\n  };\r\n\r\n  const dzActiveStyles = {\r\n    borderColor: 'green',\r\n  };\r\n\r\n  const onDrop = useCallback(\r\n    (acceptedFiles) => {\r\n      // Do something with the files\r\n      setFiles(\r\n        acceptedFiles.map((file: any) =>\r\n          Object.assign(file, {\r\n            preview: URL.createObjectURL(file),\r\n          })\r\n        )\r\n      );\r\n    },\r\n    [setFiles]\r\n  );\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  return (\r\n    <div\r\n      {...getRootProps()}\r\n      style={isDragActive ? { ...dzStyles, ...dzActiveStyles } : dzStyles}\r\n    >\r\n      <input {...getInputProps()} />\r\n      <Icon name=\"upload\" size=\"huge\" />\r\n      <Header content=\"Drop image here\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PhotoWidgetDropzone;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Button, Grid, Header } from 'semantic-ui-react';\r\n\r\nimport PhotoWidgetCropper from './PhotoWidgetCropper';\r\nimport PhotoWidgetDropzone from './PhotoWidgetDropzone';\r\n\r\ninterface Props {\r\n  loading: boolean;\r\n  uploadPhoto: (file: Blob) => void;\r\n}\r\n\r\nconst PhotoUploadWidget = ({ loading, uploadPhoto }: Props) => {\r\n  const [files, setFiles] = useState<any>([]);\r\n  const [cropper, setCropper] = useState<Cropper>();\r\n\r\n  const onCrop = () => {\r\n    if (cropper) {\r\n      cropper.getCroppedCanvas().toBlob((blob) => uploadPhoto(blob!));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      files.forEach((file: any) => URL.revokeObjectURL(file.preview));\r\n    };\r\n  }, [files]);\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={4}>\r\n        <Header sub color=\"teal\" content=\"Step 1 - Add Photo\" />\r\n        <PhotoWidgetDropzone setFiles={setFiles} />\r\n      </Grid.Column>\r\n      <Grid.Column width={1} />\r\n      <Grid.Column width={4}>\r\n        <Header sub color=\"teal\" content=\"Step 2 - Resize image\" />\r\n        {files && files.length > 0 && (\r\n          <PhotoWidgetCropper\r\n            setCropper={setCropper}\r\n            imagePreview={files[0].preview}\r\n          />\r\n        )}\r\n      </Grid.Column>\r\n      <Grid.Column width={1} />\r\n      <Grid.Column width={4}>\r\n        <Header sub color=\"teal\" content=\"Step 3 - Preview & Upload\" />\r\n        {files && files.length > 0 && (\r\n          <>\r\n            <div\r\n              className=\"img-preview\"\r\n              style={{ minHeight: 200, overflow: 'hidden' }}\r\n            />\r\n            <Button.Group widths={2}>\r\n              <Button\r\n                loading={loading}\r\n                onClick={onCrop}\r\n                positive\r\n                icon=\"check\"\r\n              />\r\n              <Button\r\n                disabled={loading}\r\n                onClick={() => setFiles([])}\r\n                icon=\"close\"\r\n              />\r\n            </Button.Group>\r\n          </>\r\n        )}\r\n      </Grid.Column>\r\n      <Grid.Column width={1} />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default PhotoUploadWidget;\r\n","import { observer } from 'mobx-react-lite';\r\nimport { SyntheticEvent, useState } from 'react';\r\nimport { Button, Card, Grid, Header, Image, Tab } from 'semantic-ui-react';\r\nimport PhotoUploadWidget from '../../app/common/imageUpload/PhotoUploadWidget';\r\n\r\nimport { Photo, Profile } from '../../app/models/profile';\r\nimport { useStore } from '../../app/stores/store';\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nconst ProfilePhotos = ({ profile }: Props) => {\r\n  const {\r\n    profileStore: {\r\n      setMainPhoto,\r\n      isCurrentUser,\r\n      uploadPhoto,\r\n      uploading,\r\n      loading,\r\n      deletePhoto,\r\n    },\r\n  } = useStore();\r\n\r\n  const [addPhotoMode, setAddPhotoMode] = useState(false);\r\n  const [target, setTarget] = useState('');\r\n\r\n  const handlePhotoUpload = (file: Blob) => {\r\n    uploadPhoto(file).then(() => setAddPhotoMode(false));\r\n  };\r\n\r\n  const handleSetMainPhoto = (\r\n    photo: Photo,\r\n    e: SyntheticEvent<HTMLButtonElement>\r\n  ) => {\r\n    setTarget(e.currentTarget.name);\r\n    setMainPhoto(photo);\r\n  };\r\n\r\n  const handleDeletePhoto = (\r\n    photo: Photo,\r\n    e: SyntheticEvent<HTMLButtonElement>\r\n  ) => {\r\n    setTarget(e.currentTarget.name);\r\n    deletePhoto(photo);\r\n  };\r\n\r\n  return (\r\n    <Tab.Pane>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header floated=\"left\" icon=\"image\" content=\"Photos\" />\r\n          {isCurrentUser && (\r\n            <Button\r\n              floated=\"right\"\r\n              basic\r\n              content={addPhotoMode ? 'Cancel' : 'Add Photo'}\r\n              onClick={() => setAddPhotoMode(!addPhotoMode)}\r\n            />\r\n          )}\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          {addPhotoMode ? (\r\n            <PhotoUploadWidget\r\n              uploadPhoto={handlePhotoUpload}\r\n              loading={uploading}\r\n            />\r\n          ) : (\r\n            <Card.Group itemsPerRow={5}>\r\n              {profile.photos.map((photo) => (\r\n                <Card key={photo.id}>\r\n                  <Image src={photo.url || '/assets/user.png'} />\r\n                  {isCurrentUser && (\r\n                    <Button.Group fluid widths={2}>\r\n                      <Button\r\n                        basic\r\n                        color=\"green\"\r\n                        content=\"Main\"\r\n                        name={`main ${photo.id}`}\r\n                        disabled={photo.isMain}\r\n                        onClick={(e) => handleSetMainPhoto(photo, e)}\r\n                        loading={target === `main ${photo.id}` && loading}\r\n                      />\r\n                      <Button\r\n                        basic\r\n                        color=\"red\"\r\n                        icon=\"trash\"\r\n                        onClick={(e) => handleDeletePhoto(photo, e)}\r\n                        disabled={photo.isMain}\r\n                        name={photo.id}\r\n                        loading={target === photo.id && loading}\r\n                      />\r\n                    </Button.Group>\r\n                  )}\r\n                </Card>\r\n              ))}\r\n            </Card.Group>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n};\r\n\r\nexport default observer(ProfilePhotos);\r\n","import { observer } from 'mobx-react-lite';\r\nimport { Tab } from 'semantic-ui-react';\r\n\r\nimport { Profile } from '../../app/models/profile';\r\nimport { useStore } from '../../app/stores/store';\r\nimport ProfileAbout from './ProfileAbout';\r\nimport ProfileActivities from './ProfileActivities';\r\nimport ProfileFollowings from './ProfileFollowings';\r\nimport ProfilePhotos from './ProfilePhotos';\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nconst ProfileContent = ({ profile }: Props) => {\r\n  const { profileStore } = useStore();\r\n  const panes = [\r\n    { menuItem: 'About', render: () => <ProfileAbout /> },\r\n    { menuItem: 'Photos', render: () => <ProfilePhotos profile={profile} /> },\r\n    { menuItem: 'Events', render: () => <ProfileActivities /> },\r\n    {\r\n      menuItem: 'Followers',\r\n      render: () => <ProfileFollowings />,\r\n    },\r\n    {\r\n      menuItem: 'Following',\r\n      render: () => <ProfileFollowings />,\r\n    },\r\n  ];\r\n  return (\r\n    <Tab\r\n      menu={{ fluid: true, vertical: true }}\r\n      menuPosition=\"right\"\r\n      panes={panes}\r\n      onTabChange={(e, data) => profileStore.setActiveTab(data.activeIndex)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default observer(ProfileContent);\r\n","import { observer } from 'mobx-react-lite';\r\nimport {\r\n  Divider,\r\n  Grid,\r\n  Header,\r\n  Item,\r\n  Segment,\r\n  Statistic,\r\n} from 'semantic-ui-react';\r\n\r\nimport { Profile } from '../../app/models/profile';\r\nimport FollowButton from './FollowButton';\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nconst ProfileHeader = ({ profile }: Props) => {\r\n  return (\r\n    <Segment>\r\n      <Grid>\r\n        <Grid.Column width={12}>\r\n          <Item.Group>\r\n            <Item>\r\n              <Item.Image\r\n                avatar\r\n                size=\"small\"\r\n                src={profile.image || '/assets/user.png'}\r\n              />\r\n              <Item.Content verticalAlign=\"middle\">\r\n                <Header as=\"h1\" content={profile.displayName} />\r\n              </Item.Content>\r\n            </Item>\r\n          </Item.Group>\r\n        </Grid.Column>\r\n        <Grid.Column width={4}>\r\n          <Statistic.Group widths={2}>\r\n            <Statistic label=\"Followers\" value={profile.followersCount} />\r\n            <Statistic label=\"Following\" value={profile.followingCount} />\r\n          </Statistic.Group>\r\n          <Divider />\r\n          <FollowButton profile={profile} />\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport default observer(ProfileHeader);\r\n","import { observer } from 'mobx-react-lite';\r\nimport React, { useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Grid } from 'semantic-ui-react';\r\nimport LoadingComponent from '../../app/layout/LoadingComponent';\r\n\r\nimport { useStore } from '../../app/stores/store';\r\nimport ProfileContent from './ProfileContent';\r\nimport ProfileHeader from './ProfileHeader';\r\n\r\nconst ProfilePage = () => {\r\n  const { username } = useParams<{ username: string }>();\r\n  const { profileStore } = useStore();\r\n  const { loadingProfile, loadProfile, profile, setActiveTab } = profileStore;\r\n\r\n  useEffect(() => {\r\n    loadProfile(username);\r\n\r\n    return () => setActiveTab(0);\r\n  }, [loadProfile, setActiveTab, username]);\r\n\r\n  if (loadingProfile) return <LoadingComponent content=\"Loading profile...\" />;\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={16}>\r\n        {profile && (\r\n          <>\r\n            <ProfileHeader profile={profile} />\r\n            <ProfileContent profile={profile} />\r\n          </>\r\n        )}\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default observer(ProfilePage);\r\n","import {\r\n  Redirect,\r\n  Route,\r\n  RouteComponentProps,\r\n  RouteProps,\r\n} from 'react-router-dom';\r\n\r\nimport { useStore } from '../stores/store';\r\n\r\ninterface Props extends RouteProps {\r\n  component:\r\n    | React.ComponentType<RouteComponentProps<any>>\r\n    | React.ComponentType<any>;\r\n}\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }: Props) => {\r\n  const {\r\n    userStore: { isLoggedIn },\r\n  } = useStore();\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        isLoggedIn ? <Component {...props} /> : <Redirect to=\"/\" />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import { useEffect } from 'react';\r\nimport { Container } from 'semantic-ui-react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Route, useLocation } from 'react-router';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport { Switch } from 'react-router-dom';\r\n\r\nimport { useStore } from '../stores/store';\r\n\r\nimport NavBar from './NavBar';\r\nimport ActivityDashboard from '../../features/activities/dashboard/ActivityDashboard';\r\nimport HomePage from '../../features/home/HomePage';\r\nimport ActivityForm from '../../features/activities/form/ActivityForm';\r\nimport ActivityDetails from '../../features/activities/details/ActivityDetails';\r\nimport TestErrors from '../../features/errors/TestError';\r\nimport NotFound from '../../features/errors/NotFound';\r\nimport ServerError from '../../features/errors/ServerError';\r\nimport LoadingComponent from './LoadingComponent';\r\nimport ModalContainer from '../common/modals/ModalContainer';\r\nimport ProfilePage from '../../features/profiles/ProfilePage';\r\nimport PrivateRoute from './PrivateRoute';\r\n\r\nfunction App() {\r\n  const location = useLocation();\r\n  const { commonStore, userStore } = useStore();\r\n\r\n  useEffect(() => {\r\n    if (commonStore.token) {\r\n      userStore.getUser().finally(() => commonStore.setAppLoaded());\r\n    } else {\r\n      commonStore.setAppLoaded();\r\n    }\r\n  }, [commonStore, userStore]);\r\n\r\n  if (!commonStore.appLoaded)\r\n    return <LoadingComponent content=\"Loading app...\" />;\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer position=\"bottom-right\" hideProgressBar />\r\n      <ModalContainer />\r\n      <Route path=\"/\" exact component={HomePage} />\r\n      <Route\r\n        path={'/(.+)'}\r\n        render={() => (\r\n          <>\r\n            <NavBar />\r\n            <Container style={{ marginTop: '7em' }}>\r\n              <Switch>\r\n                <PrivateRoute\r\n                  path=\"/activities\"\r\n                  exact\r\n                  component={ActivityDashboard}\r\n                />\r\n                <PrivateRoute\r\n                  path=\"/activities/:id\"\r\n                  component={ActivityDetails}\r\n                />\r\n                <PrivateRoute\r\n                  key={location.key}\r\n                  path={['/createActivity', '/manage/:id']}\r\n                  component={ActivityForm}\r\n                />\r\n                <PrivateRoute\r\n                  path=\"/profiles/:username\"\r\n                  component={ProfilePage}\r\n                />\r\n                <PrivateRoute path=\"/errors\" component={TestErrors} />\r\n                <Route path=\"/server-error\" component={ServerError} />\r\n                <Route component={NotFound} />\r\n              </Switch>\r\n            </Container>\r\n          </>\r\n        )}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default observer(App);\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}\r\n","import ReactDOM from 'react-dom';\r\nimport { Router } from 'react-router-dom';\r\nimport { createBrowserHistory } from 'history';\r\n\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\n\r\nimport './app/layout/styles.css';\r\nimport App from './app/layout/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { StoreContext, store } from './app/stores/store';\r\nimport ScrollToTop from './app/layout/ScrollToTop';\r\n\r\nexport const history = createBrowserHistory();\r\n\r\nReactDOM.render(\r\n  <StoreContext.Provider value={store}>\r\n    <Router history={history}>\r\n      <ScrollToTop />\r\n      <App />\r\n    </Router>\r\n  </StoreContext.Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}